(function(){"use strict";var e={5346:function(e,n,t){var o=t(6848),d=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"app"}},[t("IndexPage")],1)},a=[],s=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"IndexPage"}},[t("div",{attrs:{id:"index"}},[t("transition",{attrs:{name:"navigation",appear:""}},[t("div",{attrs:{id:"navigation"}},[t("div",{attrs:{id:"menu"}},[t("div",{attrs:{id:"menuList"}},[t("div",{staticClass:"menuChild",attrs:{onclick:"window.scroll({top:0,left:0,behavior:'instant'})"}},[t("router-link",{attrs:{to:"/index","active-class":"menuActive"}},[t("i",{staticClass:"el-icon-s-home"}),t("span",[e._v("主页")])])],1),t("div",{staticClass:"menuChild",attrs:{onclick:"window.scroll({top:0,left:0,behavior:'instant'})"}},[t("router-link",{attrs:{to:"/code","active-class":"menuActive"}},[t("i",{staticClass:"el-icon-s-tools"}),t("span",[e._v("代码")])])],1),t("div",{staticClass:"menuChild",attrs:{onclick:"window.scroll({top:0,left:0,behavior:'instant'})"}},[t("router-link",{attrs:{to:"/document","active-class":"menuActive"}},[t("i",{staticClass:"el-icon-s-management"}),t("span",[e._v("文档")])])],1),t("div",{staticClass:"menuChild",attrs:{onclick:"window.scroll({top:0,left:0,behavior:'instant'})"}},[t("router-link",{attrs:{to:"/about","active-class":"menuActive"}},[t("i",{staticClass:"el-icon-s-custom"}),t("span",[e._v("关于")])])],1)])])])])],1),t("div",{attrs:{id:"siteBackground"}}),t("h1",{staticStyle:{"margin-top":"70px"}},[e._v("虚拟化技术与云计算")]),t("h2",{staticStyle:{"margin-top":"1px"}},[e._v("Serverless 数据预处理服务")]),t("transition",{attrs:{name:"content",appear:""}},[t("keep-alive",[t("router-view")],1)],1)],1)},l=[],c={name:"IndexPage",methods:{},mounted(){},data(){return{}}},r=c,i=t(1656),u=(0,i.A)(r,s,l,!1,null,null,null),p=u.exports,m={name:"App",components:{IndexPage:p}},y=m,x=(0,i.A)(y,d,a,!1,null,null,null),h=x.exports,b=t(6178),f=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"Home"}},[t("el-select",{staticStyle:{"margin-right":"17px"},attrs:{placeholder:"请选择云函数",filterable:"","default-first-option":!0},on:{change:function(n){return e.selectionChange()}},model:{value:e.value,callback:function(n){e.value=n},expression:"value"}},e._l(e.options,(function(e){return t("el-option",{key:e.key,attrs:{label:e.value,value:e.key}})})),1),t("el-button",{staticStyle:{"margin-left":"17px"},attrs:{type:"primary",plain:""},on:{click:function(n){return e.input()}}},[e._v("代码测试 RUN")]),t("div",{attrs:{id:"IO"}},[t("el-input",{attrs:{type:"textarea",autosize:{minRows:11,maxRows:11},placeholder:e.example,size:"large"},model:{value:e.text,callback:function(n){e.text=n},expression:"text"}}),t("el-input",{attrs:{type:"textarea",autosize:{minRows:11,maxRows:11},placeholder:e.expected,size:"large"},model:{value:e.result,callback:function(n){e.result=n},expression:"result"}})],1)],1)},v=[];const B='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.mean(jsonBody)),\n        "headers": {"Content-Type": "application/json"},\n    }\n',j="[1,2,3,4,5,6,7]",k="4";var g,C,w={code:B,example:j,result:k},A=w,E=(0,i.A)(A,g,C,!1,null,null,null),F=E.exports;const _='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(max(jsonBody)),\n        "headers": {"Content-Type": "application/json"},\n    }\n',S="[5,20,10]",T="20";var O,D,L={code:_,example:S,result:T},P=L,R=(0,i.A)(P,O,D,!1,null,null,null),I=R.exports;const z='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(min(jsonBody)),\n        "headers": {"Content-Type": "application/json"},\n    }\n',$="[5,20,10]",M="5";var q,N,J={code:z,example:$,result:M},W=J,H=(0,i.A)(W,q,N,!1,null,null,null),G=H.exports;const U='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.average(jsonBody["data"], weights=jsonBody["weight"])),\n        "headers": {"Content-Type": "application/json"},\n    }\n\n',V='\n{\n    "data": [4,5,2,1,3],\n    "weight": [1,1,1,3,2]\n}\n',K="2.5";var Q,X,Y={code:U,example:V,result:K},Z=Y,ee=(0,i.A)(Z,Q,X,!1,null,null,null),ne=ee.exports;const te='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nfrom collections import Counter\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(Counter(jsonBody)),\n        "headers": {"Content-Type": "application/json"},\n    }\n',oe="[1,2,3,3,4,4,4,5]",de="\nCounter({\n    3: 2,\n    1: 1,\n    2: 1,\n    4: 1\n})";var ae,se,le={code:te,example:oe,result:de},ce=le,re=(0,i.A)(ce,ae,se,!1,null,null,null),ie=re.exports;const ue='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nfrom collections import Counter\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.around(jsonBody["data"], jsonBody["bitcount"])),\n        "headers": {"Content-Type": "application/json"},\n    }\n',pe='\n{\n    "data": [1.936,4.656,3.074,4.7767],\n    "bitcount": 2\n}',me="\n[\n    1.94 4.66 3.07 4.78\n]";var ye,xe,he={code:ue,example:pe,result:me},be=he,fe=(0,i.A)(be,ye,xe,!1,null,null,null),ve=fe.exports;const Be='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\ndef handler (event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    x = np.var(jsonBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(x),\n        "headers": {\n            "Content-Type": "application/json"\n        }\n    }\n',je="\n[1,3,7,9,4,0,-1,-3,-7,11,16]",ke="\n40.59504132231405";var ge,Ce,we={code:Be,example:je,result:ke},Ae=we,Ee=(0,i.A)(Ae,ge,Ce,!1,null,null,null),Fe=Ee.exports;const _e='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    x = sorted(jsonBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(x),\n        "headers": {"Content-Type": "application/json"},\n    }\n\n',Se="\n[1,5,2,-5,4,3,0,-1,-3]",Te="\n-5,-3,-1,0,1,2,3,4,5";var Oe,De,Le={code:_e,example:Se,result:Te},Pe=Le,Re=(0,i.A)(Pe,Oe,De,!1,null,null,null),Ie=Re.exports;const ze='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n# from scipy import stats\n\n\ndef handler (event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n    counts = np.bincount(jsonBody)\n    print(np.argmax(counts))\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.argmax(counts)),\n        "headers": {\n            "Content-Type": "application/json"\n        }\n    }\n',$e="\n[3,2,6,8,1,2,3,4,3]",Me="3";var qe,Ne,Je={code:ze,example:$e,result:Me},We=Je,He=(0,i.A)(We,qe,Ne,!1,null,null,null),Ge=He.exports;const Ue='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler (event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.median(jsonBody)),\n        "headers": {\n            "Content-Type": "application/json"\n        }\n    }\n',Ve="\n[1,2,3,4,5,6,7,8]",Ke="4.5";var Qe,Xe,Ye={code:Ue,example:Ve,result:Ke},Ze=Ye,en=(0,i.A)(Ze,Qe,Xe,!1,null,null,null),nn=en.exports;const tn='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    k = jsonBody["key"]\n    for key in k:\n        print(key, ": ", k[key])\n    m = jsonBody["data"]\n    c = len(m[0])\n    r = len(m)\n    t = [[0 for col in range(c)] for row in range(r)]\n    for i in range(r):\n        for j in range(c):\n            if t[i][j] == 0:\n                for key in k:\n                    if m[i][j] == float(key):\n                        m[i][j] = k[key]\n                        t[i][j] = 1\n                        break\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(m),\n        "headers": {"Content-Type": "application/json"},\n    }\n',on='\n{\n    "key":{\n        "1":0,\n        "0":1\n    },\n    "data":[\n        [0,1,2,3],\n        [1,2,3,4]\n    ]\n}',dn="[1,0,2,3]\n[0,2,3,4]";var an,sn,ln={code:tn,example:on,result:dn},cn=ln,rn=(0,i.A)(cn,an,sn,!1,null,null,null),un=rn.exports;const pn='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n    jsonBody = jsonBody.split(".")\n    str1 = jsonBody[0].replace("[", "").replace("]", "")\n    str2 = jsonBody[1].replace("[", "").replace("]", "")\n    list1 = str1.split(",")\n    list2 = []\n    for i in list1:\n        i = float(i)\n        list2.append(i)\n    list3 = str2.split(",")\n    list4 = []\n    for i in list3:\n        i = float(i)\n        list4.append(i)\n    a = np.array([list2, list4])\n    ans = np.cov(a)\n    # avg1 = np.mean(list1)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(ans),\n        "headers": {"Content-Type": "application/json"},\n    }\n',mn='"[3,2,6,8,1,2,3,4,3].[1,2,3,4,5,6,7,8,9]"',yn="\n[[ 4.77777778 -0.75      ]\n [-0.75        7.5       ]]";var xn,hn,bn={code:pn,example:mn,result:yn},fn=bn,vn=(0,i.A)(fn,xn,hn,!1,null,null,null),Bn=vn.exports;const jn='# -- coding:utf-8 --\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n    list1 = []\n    for i in jsonBody:\n        list1.append((i - min(jsonBody)) / (max(jsonBody) - min(jsonBody)))\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(list1),\n        "headers": {"Content-Type": "application/json"},\n    }\n',kn="[3,4,1,2,0]",gn="\n[0.75, 1.0, 0.25, 0.5, 0.0]";var Cn,wn,An={code:jn,example:kn,result:gn},En=An,Fn=(0,i.A)(En,Cn,wn,!1,null,null,null),_n=Fn.exports;const Sn='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    a = np.array(jsonBody, dtype=np.float)\n    raw = len(a)\n    col = len(a[0])\n    temp = []\n    # ans = []\n    for i in range(0, raw):\n        vec = a[i]\n        for j in range(0, col):\n            if np.isnan(vec[j]):\n                a[i][j] = 0\n    # ans = np.array(ans)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": json.dumps(a.tolist()),\n        "headers": {"Content-Type": "application/json"},\n    }\n',Tn="\n[\n    [1,2,null,4],\n    [null,3,4,5],\n    [5,2,null,7],\n    [6,1,2,10]\n]",On="[1,0,2,3]\n[0,2,3,4]";var Dn,Ln,Pn={code:Sn,example:Tn,result:On},Rn=Pn,In=(0,i.A)(Rn,Dn,Ln,!1,null,null,null),zn=In.exports;const $n='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    a = jsonBody["axis"]\n    m = jsonBody["data"]\n    l = len(jsonBody)\n    ans = []\n    if l == 1:\n        ans.append(m)\n    else:\n        ans.append(np.concatenate(m,int(a)))\n        # for i in range(l - 1):\n        #     ans.append(np.append(m[i], m[i + 1], int(a)))\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(ans),\n        "headers": {"Content-Type": "application/json"},\n    }\n',Mn='\n{\n    "axis": 0, // 0为行拼接;1为列拼接\n    "data": [\n        [\n            [1,2,3],\n            [2,3,4]\n        ],\n        [\n            [5,6,7],\n            [6,7,8]\n        ],\n        [\n            ["a","b","c"],\n            ["d","e","f"]\n        ]\n    ]\n}',qn="\n[['1', '2', '3'],\n['2', '3', '4'],\n['5', '6', '7'],\n['6', '7', '8'],\n['a', 'b', 'c'],\n['d', 'e', 'f']]";var Nn,Jn,Wn={code:$n,example:Mn,result:qn},Hn=Wn,Gn=(0,i.A)(Hn,Nn,Jn,!1,null,null,null),Un=Gn.exports;const Vn='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nfrom collections import Counter\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody)\n    jsonBody = json.loads(decodedBody)\n    decodedBody = decodedBody.decode()\n    arr = np.array(jsonBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.array(list(set([tuple(t) for t in arr])))),\n        "headers": {"Content-Type": "application/json"},\n    }\n',Kn="\n[\n    [1,2,3],\n    [1,2,3],\n    [2,3,4]\n]",Qn="\n[[2 3 4]\n [1 2 3]]";var Xn,Yn,Zn={code:Vn,example:Kn,result:Qn},et=Zn,nt=(0,i.A)(et,Xn,Yn,!1,null,null,null),tt=nt.exports;const ot='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    mean = np.mean(jsonBody)\n    std = np.std(jsonBody)\n    sigma = std * 3\n    a = np.array(jsonBody, dtype=float)\n    row = len(a)\n    col = len(a[0])\n\n    # ans = np.array()\n    counterlist = []\n    for i in range(0, row):\n        for j in range(0, col):\n            if (a[i][j] - mean) > sigma:\n                counterlist.append(i)\n    for i in counterlist:\n        a = np.delete(a, i, 0)\n\n    # x = sorted(jsonBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": json.dumps(a.tolist()),\n        "headers": {"Content-Type": "application/json"},\n    }\n',dt="\n[\n    [2,3,4,5],\n    [5,2,4,7],\n    [1,2,10000,4],\n    [10000,100000,10000,10000]\n]",at="\n[2,3,4,5]\n[5,2,4,7]\n[1,2,10000,4]";var st,lt,ct={code:ot,example:dt,result:at},rt=ct,it=(0,i.A)(rt,st,lt,!1,null,null,null),ut=it.exports;const pt='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    a = jsonBody["data"]\n    a = sorted(a)\n    l = len(a)\n    w = jsonBody["width"]\n    maximum = max(a)\n    minimum = min(a)\n    x = int((maximum - minimum) / w)  # 结果共有x(+1)组数据\n    print(a, l, w, x)\n    ans = {}\n    index = -1\n    for i in range(x):\n        key = str(w * i) + "~" + str((w * (i + 1)))\n        value = []\n        for j in range(index + 1, l):\n            if a[j] <= w * (i + 1):\n                index = j\n                value.append(a[j])\n        ans[key] = value\n        print(key, " - ", value)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": json.dumps(ans),\n        "headers": {"Content-Type": "application/json"},\n    }\n',mt='\n{\n    "width":4,\n    "data":[3,6,1,8,3,0,5]\n}',yt="\n0~4: 0,1,3,3\n4~8: 5,6,8";var xt,ht,bt={code:pt,example:mt,result:yt},ft=bt,vt=(0,i.A)(ft,xt,ht,!1,null,null,null),Bt=vt.exports;const jt='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    a = jsonBody["data"]\n    a = sorted(a)\n    l = len(a)\n    f = jsonBody["frequency"]\n    n = int(l * f)  # 每组数据的个数\n    x = int(l / n)  # 结果共有x(+1)组数据\n    y = l - x * n  # 第x+1组的数据\n    print(a, l, f, n, x, y)\n    ans = {}\n    for i in range(x):\n        key = str(n * i) + "~" + str((n * (i + 1)))\n        value = a[n * i : (n * (i + 1))]\n        ans[key] = value\n        print(key, " - ", value)\n    if y != 0:\n        key = str(n * x) + "~" + str(l)\n        value = a[n * x :]\n        ans[key] = value\n        print(key, " - ", value)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": json.dumps(ans),\n        "headers": {"Content-Type": "application/json"},\n    }\n',kt='\n{\n    "frequency":0.4,\n    "data":[3,6,1,8,3,0,5]\n}',gt="\n0~2: 0,1\n2~4: 3,3\n4~6: 5,6\n6~7: 8";var Ct,wt,At={code:jt,example:kt,result:gt},Et=At,Ft=(0,i.A)(Et,Ct,wt,!1,null,null,null),_t=Ft.exports;const St='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    mean = np.mean(jsonBody)\n    # std = np.std(jsonBody)\n    # sigma = std * 3\n    a = np.array(jsonBody, dtype=float)\n    row = len(a)\n    col = len(a[0])\n\n    # ans = np.array()\n    tempSet = set()\n    counterlist = []\n    for i in range(0, col):\n        for j in range(0, row):\n            tempSet.add(a[j][i])\n        if len(tempSet) == row:\n            counterlist.append(i)\n        tempSet = set()\n    print(counterlist)\n    for i in range(len(counterlist) - 1, -1, -1):\n        a = np.delete(a, counterlist[i], 1)\n\n    # x = sorted(jsonBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": json.dumps(a.tolist()),\n        "headers": {"Content-Type": "application/json"},\n    }\n',Tt="\n[\n    [1,3,5,7],\n    [2,4,6,8],\n    [3,6,9,12],\n    [2,5,7,8]\n]",Ot="\n[1,7]\n[2,8]\n[3,12]\n[2,8]";var Dt,Lt,Pt={code:St,example:Tt,result:Ot},Rt=Pt,It=(0,i.A)(Rt,Dt,Lt,!1,null,null,null),zt=It.exports;const $t='import json\nimport base64\nimport numpy as np\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody)\n    jsonBody = json.loads(decodedBody)\n    decodedBody = decodedBody.decode()\n    res = []\n    colnum = jsonBody["col"] - 1\n    boundary = jsonBody["boundary"]\n    arr = np.array(jsonBody["data"], dtype=str)\n    raw = len(arr)\n    col = len(arr[0])\n    list = []\n    temp = []\n    for i in range(0, raw):\n        for j in range(0, col):\n            if j != colnum:\n                temp.append(int(arr[i][j]))\n            else:\n                if int(arr[i][colnum]) >= boundary:\n                    temp.append("high")\n                else:\n                    temp.append("low")\n        list += [temp]\n        temp = []\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(list),\n        "headers": {"Content-Type": "application/jsin"},\n    }\n',Mt='\n{\n    "col":3,\n    "boundary":18,\n    "data":[\n        [14,5,20,11],\n        [26,11,56,24],\n        [33,26,15,5]\n    ]\n}',qt="\n[[14, 5, 'high', 11],\n [26, 11, 'high', 24],\n [33, 26, 'low', 5]]";var Nt,Jt,Wt={code:$t,example:Mt,result:qt},Ht=Wt,Gt=(0,i.A)(Ht,Nt,Jt,!1,null,null,null),Ut=Gt.exports;const Vt="# Please select a function first",Kt={code:F.code,example:F.example,result:F.result},Qt={code:I.code,example:I.example,result:I.result},Xt={code:G.code,example:G.example,result:G.result},Yt={code:ne.code,example:ne.example,result:ne.result},Zt={code:ie.code,example:ie.example,result:ie.result},eo={code:ve.code,example:ve.example,result:ve.result},no={code:Fe.code,example:Fe.example,result:Fe.result},to={code:Ie.code,example:Ie.example,result:Ie.result},oo={code:Ge.code,example:Ge.example,result:Ge.result},ao={code:nn.code,example:nn.example,result:nn.result},so={code:un.code,example:un.example,result:un.result},lo={code:Bn.code,example:Bn.example,result:Bn.result},co={code:_n.code,example:_n.example,result:_n.result},ro={code:zn.code,example:zn.example,result:zn.result},io={code:Un.code,example:Un.example,result:Un.result},uo={code:tt.code,example:tt.example,result:tt.result},po={code:ut.code,example:ut.example,result:ut.result},mo={code:Bt.code,example:Bt.example,result:Bt.result},yo={code:_t.code,example:_t.example,result:_t.result},xo={code:zt.code,example:zt.example,result:zt.result},ho={code:Ut.code,example:Ut.example,result:Ut.result};var bo,fo,vo={code:Vt,code1:Kt,code2:Qt,code3:Xt,code4:Yt,code5:Zt,code6:eo,code7:no,code8:to,code9:oo,code10:ao,code11:so,code12:lo,code13:co,code14:ro,code15:io,code16:uo,code17:po,code18:mo,code19:yo,code20:xo,code21:ho},Bo=vo,jo=(0,i.A)(Bo,bo,fo,!1,null,null,null),ko=jo.exports;const go=[{key:"1",value:"平均值"},{key:"2",value:"最大值"},{key:"3",value:"最小值"},{key:"4",value:"加权平均"},{key:"5",value:"计数"},{key:"6",value:"保留小数"},{key:"7",value:"方差"},{key:"8",value:"排序"},{key:"9",value:"众数"},{key:"10",value:"中位数"},{key:"11",value:"数据替换"},{key:"12",value:"协方差"},{key:"13",value:"归一化"},{key:"14",value:"填补空缺值"},{key:"15",value:"多数组拼接"},{key:"16",value:"去除冗余"},{key:"17",value:"去除离群值"},{key:"18",value:"等宽离散化"},{key:"19",value:"等频离散化"},{key:"20",value:"去除唯一属性"},{key:"21",value:"数据分组"}];var Co,wo,Ao={FunctionList:go},Eo=Ao,Fo=(0,i.A)(Eo,Co,wo,!1,null,null,null),_o=Fo.exports,So={name:"Home",components:{},data(){return{options:_o.FunctionList,value:"",text:"",result:"",example:"请以JSON格式输入函数所需参数",expected:"云函数执行结果, 非必要请勿修改"}},methods:{selectionChange(){this.text="",this.result="";let e="请以JSON格式输入函数所需参数\nExample: ",n="Expected Result: ";switch(this.value){case"1":this.example=e+ko.code1.example,this.expected=n+ko.code1.result;break;case"2":this.example=e+ko.code2.example,this.expected=n+ko.code2.result;break;case"3":this.example=e+ko.code3.example,this.expected=n+ko.code3.result;break;case"4":this.example=e+ko.code4.example,this.expected=n+ko.code4.result;break;case"5":this.example=e+ko.code5.example,this.expected=n+ko.code5.result;break;case"6":this.example=e+ko.code6.example,this.expected=n+ko.code6.result;break;case"7":this.example=e+ko.code7.example,this.expected=n+ko.code7.result;break;case"8":this.example=e+ko.code8.example,this.expected=n+ko.code8.result;break;case"9":this.example=e+ko.code9.example,this.expected=n+ko.code9.result;break;case"10":this.example=e+ko.code10.example,this.expected=n+ko.code10.result;break;case"11":this.example=e+ko.code11.example,this.expected=n+ko.code11.result;break;case"12":this.example=e+ko.code12.example,this.expected=n+ko.code12.result;break;case"13":this.example=e+ko.code13.example,this.expected=n+ko.code13.result;break;case"14":this.example=e+ko.code14.example,this.expected=n+ko.code14.result;break;case"15":this.example=e+ko.code15.example,this.expected=n+ko.code15.result;break;case"16":this.example=e+ko.code16.example,this.expected=n+ko.code16.result;break;case"17":this.example=e+ko.code17.example,this.expected=n+ko.code17.result;break;case"18":this.example=e+ko.code18.example,this.expected=n+ko.code18.result;break;case"19":this.example=e+ko.code19.example,this.expected=n+ko.code19.result;break;case"20":this.example=e+ko.code20.example,this.expected=n+ko.code20.result;break;case"21":this.example=e+ko.code21.example,this.expected=n+ko.code21.result;break;default:this.example="请以JSON格式输入函数所需参数",this.expected="云函数执行结果, 非必要请勿修改";break}},input(){if(""!=this.value)if(""!=this.text)switch(this.result="Loading...",this.value){case"1":this.callCloudFunction("work-average",1);break;case"2":this.callCloudFunction("work-02-max",2);break;case"3":this.callCloudFunction("work-03-min",3);break;case"4":this.callCloudFunction("work-04-weighted",4);break;case"5":this.callCloudFunction("work-05-count",5);break;case"6":this.callCloudFunction("work-06-retain",6);break;case"7":this.callCloudFunction("work-07-variance",7);break;case"8":this.callCloudFunction("work-08-sort",8);break;case"9":this.callCloudFunction("work-09-mode",9);break;case"10":this.callCloudFunction("work-10-median",10);break;case"11":this.callCloudFunction("work-11-replacement",11);break;case"12":this.callCloudFunction("work-12-covariance",12);break;case"13":this.callCloudFunction("work-13-normalization",13);break;case"14":this.callCloudFunction("work-14-fix",14);break;case"15":this.callCloudFunction("work-15-group",15);break;case"16":this.callCloudFunction("work-16-remove-red");break;case"17":this.callCloudFunction("work-17-remove-out",17);break;case"18":this.callCloudFunction("work-18-equal-width",18);break;case"19":this.callCloudFunction("work-19-equal-fre",19);break;case"20":this.callCloudFunction("work-20-remove-uni",20);break;case"21":this.callCloudFunction("work-21-data",21);break;default:break}else this.result="Empty Input";else this.result="Please select a function first"},callCloudFunction(e,n){const o=this,d=t(788),a={method:"post",url:"https://d0025daed99e45c2aa64ecda39949742.apig.cn-north-4.huaweicloudapis.com/"+e,data:o.text};d(a).then((function(e){let t=e.data;if(console.log(t),11==n||14==n||17==n||20==n){let e=(new Date).toLocaleString()+"\nClould Function Result: \n";for(let n=0;n<t.length;n++)e=e+"["+t[n]+"]\n";o.result=e}else if(15==n){let e=(new Date).toLocaleString()+"\nClould Function Result: \n";e=e+"      "+t.split("(")[1].split(", dtype")[0],e.includes(")")&&(e=e.split(")")[0]),o.result=e}else if(18==n||19==n){let e=(new Date).toLocaleString()+"\nClould Function Result: \n";for(let n in t)e=e+n+": "+t[n]+"\n";o.result=e}else if(21==n){let e=(new Date).toLocaleString()+"\nClould Function Result: \n",n=t.split("],");for(let t in n)e=t!=n.length-1?e+n[t]+"],\n":e+n[t]+"\n";o.result=e}else o.result=(new Date).toLocaleString()+"\nClould Function Result: \n"+t})).catch((function(e){console.log(e)}))}}},To=So,Oo=(0,i.A)(To,f,v,!1,null,null,null),Do=Oo.exports,Lo=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"Code"}},[t("el-menu",{staticClass:"hoverEffect",attrs:{mode:"vertical"}},e._l(e.itemList,(function(n){return t("el-menu-item",{key:n.key,on:{click:function(t){return e.itemChange(n.key)}}},[e._v(e._s(n.value))])})),1),t("editor",{staticClass:"hoverEffect",staticStyle:{"margin-right":"17px"},attrs:{lang:"python",theme:"chrome",width:"87%",height:"77vh",options:e.options},on:{init:e.editorInit},model:{value:e.content,callback:function(n){e.content=n},expression:"content"}})],1)},Po=[],Ro={name:"Code",components:{editor:t(6188)},methods:{editorInit:function(){t(4075),t(4611),t(9457),t(2997)},itemChange(e){switch(this.item=e,this.item){case"1":this.content=ko.code1.code;break;case"2":this.content=ko.code2.code;break;case"3":this.content=ko.code3.code;break;case"4":this.content=ko.code4.code;break;case"5":this.content=ko.code5.code;break;case"6":this.content=ko.code6.code;break;case"7":this.content=ko.code7.code;break;case"8":this.content=ko.code8.code;break;case"9":this.content=ko.code9.code;break;case"10":this.content=ko.code10.code;break;case"11":this.content=ko.code11.code;break;case"12":this.content=ko.code12.code;break;case"13":this.content=ko.code13.code;break;case"14":this.content=ko.code14.code;break;case"15":this.content=ko.code15.code;break;case"16":this.content=ko.code16.code;break;case"17":this.content=ko.code17.code;break;case"18":this.content=ko.code18.code;break;case"19":this.content=ko.code19.code;break;case"20":this.content=ko.code20.code;break;case"21":this.content=ko.code21.code;break;default:this.content=ko.code;break}}},data(){return{options:{enableBasicAutocompletion:!0,enableSnippets:!0,enableLiveAutocompletion:!0,printMarginColumn:30,displayIndentGuides:!1,enableEmmet:!0,tabSize:6,fontSize:18,useWorker:!0,showPrintMargin:!1,enableMultiselect:!0,readOnly:!1,showFoldWidgets:!0,fadeFoldWidgets:!0,wrap:!0},itemList:_o.FunctionList,content:ko.code,item:""}}},Io=Ro,zo=(0,i.A)(Io,Lo,Po,!1,null,null,null),$o=zo.exports,Mo=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{attrs:{id:"Document"}},[o("img",{attrs:{src:t(2318)}}),o("h3",[e._v("智能与计算学部")]),o("h3",[e._v("2021级软件工程专业")]),o("h3",[e._v("2024/5/10")]),o("div",{attrs:{id:"btn-container"}},[o("el-button",{attrs:{type:"primary",round:""}},[o("a",{attrs:{href:"https://gitee.com/jiang-yuhang0102/virtual-and-cloud/blob/main/FinalAssignment/Doc/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E9%A2%98%E7%9B%AE.pdf",target:"_blank"}},[e._v("作业题目")])]),o("el-button",{attrs:{type:"success",round:""}},[o("a",{attrs:{href:"https://gitee.com/jiang-yuhang0102/virtual-and-cloud/blob/main/FinalAssignment/Doc/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%AF%84%E5%88%86%E7%BB%86%E5%88%99.pdf",target:"_blank"}},[e._v("评分细则")])]),o("el-button",{attrs:{type:"warning",round:""}},[o("a",{attrs:{href:"https://gitee.com/jiang-yuhang0102/virtual-and-cloud/blob/main/FinalAssignment/Doc/%E4%BA%91%E8%AE%A1%E7%AE%97%E5%A4%A7%E4%BD%9C%E4%B8%9A%E6%8A%A5%E5%91%8A.pdf",target:"_blank"}},[e._v("项目报告")])]),o("el-button",{attrs:{type:"danger",round:""}},[o("a",{attrs:{href:"https://gitee.com/jiang-yuhang0102/virtual-and-cloud.git",target:"_blank"}},[e._v("代码仓库")])])],1)])},qo=[],No={name:"Document"},Jo=No,Wo=(0,i.A)(Jo,Mo,qo,!1,null,"3399b43c",null),Ho=Wo.exports,Go=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},Uo=[function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{attrs:{id:"About"}},[o("h2",[e._v("开发团队")]),o("div",{attrs:{calss:"teamlist"}},[o("figure",{staticClass:"sample"},[o("img",{attrs:{src:t(7375),alt:"蒋雨航的头像"}}),o("figcaption",[o("h3",[e._v("蒋雨航")]),o("p",[e._v("前端页面设计")])])]),o("figure",{staticClass:"sample"},[o("img",{attrs:{src:t(2505),alt:"蒲云鹏的头像"}}),o("figcaption",[o("h3",[e._v("蒲云鹏")]),o("p",[e._v("API调用")])])]),o("figure",{staticClass:"sample"},[o("img",{attrs:{src:t(8010),alt:"刘原驰的头像"}}),o("figcaption",[o("h3",[e._v("刘原驰")]),o("p",[e._v("后端设计")])])])]),o("div",{attrs:{calss:"teamlist"}},[o("figure",{staticClass:"sample"},[o("img",{attrs:{src:t(5438),alt:"刁世阳的头像"}}),o("figcaption",[o("h3",[e._v("刁世阳")]),o("p",[e._v("文档撰写")])])]),o("figure",{staticClass:"sample"},[o("img",{attrs:{src:t(7276),alt:"李宗翰的头像"}}),o("figcaption",[o("h3",[e._v("李宗翰")]),o("p",[e._v("文档撰写")])])])])])}],Vo={name:"About"},Ko=Vo,Qo=(0,i.A)(Ko,Go,Uo,!1,null,"6022f11f",null),Xo=Qo.exports,Yo=new b.A({routes:[{path:"/",redirect:"/index"},{path:"/index",component:Do},{path:"/code",component:$o},{path:"/document",component:Ho},{path:"/about",component:Xo}]}),Zo=t(9143),ed=t.n(Zo);o["default"].use(b.A),o["default"].use(ed()),o["default"].config.productionTip=!1,new o["default"]({render:e=>e(h),router:Yo}).$mount("#app")},5438:function(e,n,t){e.exports=t.p+"img/dsy.19e2de4a.jpg"},7375:function(e,n,t){e.exports=t.p+"img/jyh.7d95cc99.jpg"},8010:function(e,n,t){e.exports=t.p+"img/lyc.97604bfa.jpg"},7276:function(e,n,t){e.exports=t.p+"img/lzh.56b34796.jpg"},2505:function(e,n,t){e.exports=t.p+"img/pyp.d0865327.jpg"},2318:function(e,n,t){e.exports=t.p+"img/1.3d64e66a.jpg"}},n={};function t(o){var d=n[o];if(void 0!==d)return d.exports;var a=n[o]={exports:{}};return e[o](a,a.exports,t),a.exports}t.m=e,function(){t.amdD=function(){throw new Error("define cannot be used indirect")}}(),function(){var e=[];t.O=function(n,o,d,a){if(!o){var s=1/0;for(i=0;i<e.length;i++){o=e[i][0],d=e[i][1],a=e[i][2];for(var l=!0,c=0;c<o.length;c++)(!1&a||s>=a)&&Object.keys(t.O).every((function(e){return t.O[e](o[c])}))?o.splice(c--,1):(l=!1,a<s&&(s=a));if(l){e.splice(i--,1);var r=d();void 0!==r&&(n=r)}}return n}a=a||0;for(var i=e.length;i>0&&e[i-1][2]>a;i--)e[i]=e[i-1];e[i]=[o,d,a]}}(),function(){t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,{a:n}),n}}(),function(){t.d=function(e,n){for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){t.p="/VirtualAndCloud/FinalAssignment/FrontEnd/demo/dist/"}(),function(){var e={524:0};t.O.j=function(n){return 0===e[n]};var n=function(n,o){var d,a,s=o[0],l=o[1],c=o[2],r=0;if(s.some((function(n){return 0!==e[n]}))){for(d in l)t.o(l,d)&&(t.m[d]=l[d]);if(c)var i=c(t)}for(n&&n(o);r<s.length;r++)a=s[r],t.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return t.O(i)},o=self["webpackChunkdemo"]=self["webpackChunkdemo"]||[];o.forEach(n.bind(null,0)),o.push=n.bind(null,o.push.bind(o))}();var o=t.O(void 0,[504],(function(){return t(5346)}));o=t.O(o)})();
//# sourceMappingURL=app.14dbcac7.js.map